{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Chotu\\\\Desktop\\\\Pervasive Computing\\\\LabAssignments\\\\LabAssignments\\\\Lab_3\\\\labproject\\\\Components\\\\Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: false,\n        visible: this.state.isVisible,\n        onRequestClose: function onRequestClose() {\n          console.log(\"Modal has been closed.\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.modal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }\n      }, \"Modal is open!\"), React.createElement(Button, {\n        title: \"Click To Close Modal\",\n        onPress: function onPress() {\n          _this2.setState({\n            isVisible: !_this2.state.isVisible\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }\n      }))), React.createElement(Button, {\n        title: \"Click To Openss Modal\",\n        onPress: function onPress() {\n          _this2.setState({\n            isVisible: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1',\n    marginTop: 30\n  },\n  modal: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: '#F194FF',\n    padding: 100,\n    height: 20\n  },\n  text: {\n    color: 'white',\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Chotu/Desktop/Pervasive Computing/LabAssignments/LabAssignments/Lab_3/labproject/Components/Login.js"],"names":["React","Component","App","state","isVisible","styles","container","console","log","modal","text","setState","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","marginTop","padding","height","color"],"mappings":";;;;;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;IAMqBC,G;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE;AADL,K;;;;;;6BAGC;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIC,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,aAAa,EAAI,OAAxB;AAAiC,QAAA,WAAW,EAAI,KAAhD;AACI,QAAA,OAAO,EAAI,KAAKH,KAAL,CAAWC,SAD1B;AAEI,QAAA,cAAc,EAAI,0BAAK;AAAEG,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AAAuC,SAFpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIH,MAAM,CAACI,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIJ,MAAM,CAACK,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,sBAAd;AAAqC,QAAA,OAAO,EAAI,mBAAM;AAClD,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEP,YAAAA,SAAS,EAAC,CAAC,MAAI,CAACD,KAAL,CAAWC;AAAxB,WAAd;AAAkD,SADtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALJ,CADF,EAaE,oBAAC,MAAD;AACG,QAAA,KAAK,EAAC,uBADT;AAEG,QAAA,OAAO,EAAI,mBAAM;AAAC,UAAA,MAAI,CAACO,QAAL,CAAc;AAAEP,YAAAA,SAAS,EAAE;AAAb,WAAd;AAAkC,SAFvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,CADF;AAoBD;;;;EAzB8BH,S;;SAAZC,G;AA2BrB,IAAMG,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,eAAe,EAAE,SAJR;AAKTC,IAAAA,SAAS,EAAC;AALD,GADoB;AAQ9BT,EAAAA,KAAK,EAAE;AACJK,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJE,IAAAA,eAAe,EAAE,SAHb;AAIJE,IAAAA,OAAO,EAAE,GAJL;AAKJC,IAAAA,MAAM,EAAC;AALH,GARuB;AAe9BV,EAAAA,IAAI,EAAE;AACHW,IAAAA,KAAK,EAAE,OADJ;AAEHH,IAAAA,SAAS,EAAE;AAFR;AAfwB,CAAlB,CAAf","sourcesContent":["//This is an example code to understand Modal// \r\n\r\nimport React, { Component } from 'react';\r\n//import react in our code. \r\n\r\nimport { Modal, Button, View,Text, StyleSheet } from 'react-native';\r\n//import all the components we are going to use. \r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    isVisible: false, //state of modal default false\r\n  }\r\n  render() {\r\n    return (\r\n      <View style = {styles.container}>\r\n        <Modal animationType = {\"slide\"} transparent = {false}\r\n            visible = {this.state.isVisible}\r\n            onRequestClose = {() =>{ console.log(\"Modal has been closed.\") } }>\r\n            {/*All views of Modal*/}\r\n            {/*Animation can be slide, slide, none*/}\r\n            <View style = {styles.modal}>\r\n              <Text style = {styles.text}>Modal is open!</Text>\r\n              <Button title=\"Click To Close Modal\" onPress = {() => {\r\n                  this.setState({ isVisible:!this.state.isVisible})}}/>\r\n            </View>\r\n        </Modal>\r\n        {/*Button will change state to true and view will re-render*/}\r\n        <Button \r\n           title=\"Click To Openss Modal\" \r\n           onPress = {() => {this.setState({ isVisible: true})}}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#ecf0f1',\r\n    marginTop:30\r\n  },\r\n   modal: {\r\n      flex: 1,\r\n      alignItems: 'center',\r\n      backgroundColor: '#F194FF',\r\n      padding: 100,\r\n      height:20\r\n   },\r\n   text: {\r\n      color: 'white',\r\n      marginTop: 10\r\n   }\r\n});"]},"metadata":{},"sourceType":"module"}